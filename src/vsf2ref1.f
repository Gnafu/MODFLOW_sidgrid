C     Last change: Iac 2011
C     Last change:  RBT  01 JUNE 2006
C
C=======================================================================
C Create the new module for VSF and a new VSFTYPE variable: VSDAT  
      Module  VSFMODULE
        PARAMETER (ZERO=0)
        ! For REF package:
        INTEGER, SAVE, POINTER :: ISUM,ISUMIR,LCCVS,LCREFOC
        INTEGER, SAVE, POINTER :: IREFCB,IREFOC,SLNUM,NTAB
        INTEGER, SAVE, POINTER :: LCPTAB,LCKTAB,LCSTAB,LCCTAB
        INTEGER, SAVE, POINTER :: ICSTYPE,LCALPHA,LCVGN,LCRSAT
        INTEGER, SAVE, POINTER :: LCEFFP,ISATOC,ICISC
        INTEGER, SAVE, POINTER :: IAVG,ISATFL,IHYDST
        INTEGER,    SAVE, DIMENSION(:,:,:), POINTER  :: STYPE
        REAL,    SAVE, DIMENSION(:,:,:), POINTER  :: CVS
        REAL,    SAVE, DIMENSION(:,:,:), POINTER  :: KREL
        REAL,    SAVE, DIMENSION(:,:,:), POINTER  :: SAT 
        REAL,    SAVE, DIMENSION(:,:), POINTER  :: REFOC
        REAL,    SAVE, DIMENSION(:,:), POINTER  :: ALPHA
        REAL,    SAVE, DIMENSION(:,:), POINTER  :: VGN
        REAL,    SAVE, DIMENSION(:,:), POINTER  :: KTAB
        REAL,    SAVE, DIMENSION(:,:), POINTER  :: STAB
        REAL,    SAVE, DIMENSION(:,:), POINTER  :: CTAB
        REAL,    SAVE, DIMENSION(:), POINTER  :: RSAT
        REAL,    SAVE, DIMENSION(:), POINTER  :: EFFP
        REAL,    SAVE, DIMENSION(:), POINTER  :: PTAB
        INTEGER,    SAVE, DIMENSION(:), POINTER  :: ISC

        Type VSFTYPE
            INTEGER, POINTER :: ISUM,ISUMIR,LCCVS,LCREFOC
            INTEGER, POINTER :: IREFCB,IREFOC,SLNUM,NTAB
            INTEGER, POINTER :: LCPTAB,LCKTAB,LCSTAB,LCCTAB
            INTEGER, POINTER :: ICSTYPE,LCALPHA,LCVGN,LCRSAT
            INTEGER, POINTER :: LCEFFP,ISATOC,ICISC
            INTEGER, POINTER :: IAVG,ISATFL,IHYDST
            INTEGER,    DIMENSION(:,:,:), POINTER  :: STYPE
            REAL,    DIMENSION(:,:,:), POINTER  :: CVS
            REAL,    DIMENSION(:,:,:), POINTER  :: KREL
            REAL,    DIMENSION(:,:,:), POINTER  :: SAT 
            REAL,    DIMENSION(:,:), POINTER  :: REFOC
            REAL,    DIMENSION(:,:), POINTER  :: ALPHA
            REAL,    DIMENSION(:,:), POINTER  :: VGN
            REAL,    DIMENSION(:,:), POINTER  :: KTAB
            REAL,    DIMENSION(:,:), POINTER  :: STAB
            REAL,    DIMENSION(:,:), POINTER  :: CTAB
            REAL,    DIMENSION(:), POINTER  :: RSAT
            REAL,    DIMENSION(:), POINTER  :: EFFP
            REAL,    DIMENSION(:), POINTER  :: PTAB
            INTEGER,    DIMENSION(:), POINTER  :: ISC
        End type VSFTYPE
        TYPE(VSFTYPE),SAVE :: VSFDAT(10)
      End module VSFMODULE
C ====================================================================
C
      SUBROUTINE VSF2REF1AR(IN,IGRID) 
C-----Version 2011
C *** This is  a modified, integrated version of the old .AL 
C     primary subroutine of VSF old version, to get a coding style
C     conform to MODFLOW-LGR
C-----VERSION 07MARCH2006 RBT
C     ******************************************************************
C	READ AND ALLOCATE OUTPUT CONTROL FLAG REFOC ARRAY (IN RX ARRAY)
C     ALLOCATE ARRAY STORAGE FOR SOIL CHARACTERISTIC PARAMETER ARRAYS 
C	(ALPHA, VGN, RSAT,EFFP,ISC) INTERNAL TABULATION ARRAYS (PTAB, KTAB,
C	CTAB,STAB, STYPE), SATURATED VERTICAL LEAKANCE (CVS) ARRAYS 
C	(IN RX ARRAY). 
C     ******************************************************************
C     SPECIFICATIONS:
C
!! IAC
      use GLOBAL,       ONLY:IOUT,NCOL,NROW,NLAY    
     
      use VSFMODULE 
C     ------------------------------------------------------------------
      CHARACTER*200 LINE

C1------Allocate REF scalar variables, which makes it possible 
C1------for multiple grids to be defined.
      allocate(ISUM,ISUMIR,LCCVS,LCREFOC,IREFCB,IREFOC,ISATOC)
      allocate(SLNUM,NTAB,LCPTAB,LCKTAB,LCSTAB,LCCTAB)
      allocate(ICSTYPE,ICISC,LCALPHA,LCVGN,LCRSAT,LCEFFP)
      allocate(IAVG,ISATFL,IHYDST)
C
 	 
C     ------------------------------------------------------------------
  500 FORMAT(1X,/
     &1X,'REF1 -- RICHARDS EQUATION FLOW PACKAGE, VERSION 2.0,',
     &     ' 6/1/2006',/,9X,'INPUT READ FROM UNIT',I3)
  570 FORMAT(1X,'CELL-BY-CELL SOIL WATER SATURATIONS WILL BE SAVED ON'
     &,' UNIT',I3)
  575 FORMAT(1X,'CELL-BY-CELL SOIL WATER SATURATIONS WILL BE SAVED FOR'
     &,' ALL TIME STEPS IN EACH STRESS PERIOD')
  576 FORMAT(1X,'NO VARIABLY SATURATED OUTPUT REQUESTED')
  580 FORMAT(1X,'CELL-BY-CELL SOIL WATER SATURATIONS WILL BE SAVED FOR',
     &1X,I5,1X,'USER-DEFINED POINTS DURING THE SIMULATION')		
  585 FORMAT(1X,I10,' ELEMENTS IN RX ARRAY ARE USED BY REF') 
  590 FORMAT(1X,I10,' ELEMENTS IN IR ARRAY ARE USED BY REF')

C
C1---- IDENTIFY PACKAGE.
      WRITE(IOUT,500)IN
      WRITE(IOUT,*)
C
C2---- READ UNIT /. FLAG FOR CELL-BY-CELL SOIL SATURATIONS
      LLOC=1
      CALL URDCOM(IN,0,LINE)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IREFCB,R,IOUT,IN)
C
C3---- IF NO OUTPUT REQUESTED, WRITE NOTICE TO OUTPUT FILE AND SET FLAGS
      IF (IREFCB.EQ.ZERO) THEN
        WRITE(IOUT,576)
        LCREFOC=1
        IREFOC=0
        GOTO 10 
      END IF
C
C4---- IF CELL-BY-CELL SOIL WATER SATURATIONS ARE TO BE SAVED THEN 
C4---- READ OUTPUT CONTROL FLAGS
      LLOC=1
      CALL URDCOM(IN,0,LINE)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IREFOC,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISATOC,R,IOUT,IN)
C
C5---- PRINT UNIT NUMBER.TO MODFLOW OUTPUT FILE
      WRITE(IOUT,570) ABS(IREFCB)
C
C5A--- PRINT OUTPUT CONTROL SETTING TO MODFLOW OUTPUT FILE
      IF (IREFOC.LE.ZERO) THEN
	     WRITE(IOUT,575)
		LCREFOC=1
      ELSE
	     WRITE(IOUT,580)IREFOC
      END IF
C
C6---- READ IN NUMBER OF SOIL TYPES (1 SET OF SOIL PARAMETERS PER TYPE)
C6---- AND NUMBER OF INTERAL TABLE ENTRIES
   10	LLOC=1
      CALL URDCOM(IN,0,LINE)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,SLNUM,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,NTAB,R,IOUT,IN)
C

C Iac:
C Allocate space for REF arrays
      allocate (SAT(NCOL,NROW,NLAY),STYPE(NCOL,NROW,NLAY))
      allocate (CVS(NCOL,NROW,NLAY),KREL(NCOL,NROW,NLAY))	
      allocate (REFOC(IREFOC,2))
      allocate (ALPHA(SLNUM,2),VGN(SLNUM,2),RSAT(SLNUM),EFFP(SLNUM))
      allocate (PTAB(NTAB),KTAB(NTAB,SLNUM),STAB(NTAB,SLNUM))
      allocate (CTAB(NTAB,SLNUM),ISC(SLNUM))


C Iac: probably the following lines are useless (until C8)!!
C7---- ALLOCATE SPACE IN RX ARRAY FOR CVS, REFOC, PTAB, KTAB, CTAB, STAB,
C7---- STYPE, ALPHA, VGN, RSAT,EFFP,PEV,HA,SRES,PET,HROOT,RTDPTH,RTBOT 
C7---- AND RTTOP ARRAYS
       IRK=ISUM
       IIRK=ISUMIR
	   LCCVS=ISUM
       ISUM=ISUM+NCOL*NROW*NLAY
      IF (IREFCB.NE.ZERO.AND.IREFOC.GT.ZERO) THEN
		LCREFOC=ISUM
		ISUM=ISUM+IREFOC*2
      END IF
	LCPTAB=ISUM
	ISUM=ISUM+NTAB
	LCKTAB=ISUM
	ISUM=ISUM+NTAB*SLNUM	
	LCSTAB=ISUM
	ISUM=ISUM+NTAB*SLNUM
	LCCTAB=ISUM
	ISUM=ISUM+NTAB*SLNUM
	LCALPHA=ISUM
	ISUM=ISUM+SLNUM*2
	LCVGN=ISUM
	ISUM=ISUM+SLNUM*2
	LCRSAT=ISUM
	ISUM=ISUM+SLNUM
	LCEFFP=ISUM
	ISUM=ISUM+SLNUM
C
	ICSTYPE=ISUMIR
	ISUMIR=ISUMIR+NCOL*NROW*NLAY
	ICISC=ISUMIR
	ISUMIR=ISUMIR+SLNUM
C
C8---- CALCULATE & PRINT AMOUNT OF SPACE USED BY REF PACKAGE.
      IRK=ISUM-IRK
	IIRK=ISUMIR-IIRK
      WRITE(IOUT,585)IRK
      WRITE(IOUT,590)IIRK
      
C Iac: -----SAVE POINTERS TO DATA AND RETURN.
      CALL SVSF2VSF1PSV(IGRID)
C9---- RETURN.
      RETURN
      END
C
      SUBROUTINE VSF2REF1RP(IN,FNAME,IGRID)
C-----Version 2011
C-----VERSION 01JUNE2006
C     ******************************************************************
C     READ REFOC ARRAY (IF NEEDED), INITIAL SAT FLAG,  SOIL CHARACTERISTIC
C	PARAMETERS,  AND INITIAL SOIL SATURATIONS (IF REQUESTED)
C
C	COMPUTE INTERNAL SOIL CHARACTERISTIC TABLE
C     OPEN OUTPUT FILEC
C---- NOTE: SOIL CHARACTERISTIC PARAMETERS ALPHA AND VGN OCCUPY 2 DIMENSIONAL
C                   ARRAY SPACE IN ORDER TO ALLOW DUAL PARAMETER FUNCTIONS
C		  ROW 1 - CONTAINS PARAMETERS USED FOR RELATIVE PERMEABILITY FUNCTION
C		  ROW 2 - CONTAINS PARAMETERS USED FOR SATURATION 
C				  AND SPECIFIC MOISTURE CAPACITY FUNCTION
C     ******************************************************************
C     SPECIFICATIONS: 
!! IAC
      use GLOBAL,       ONLY:IOUT,NCOL,NROW,NLAY,HNEW,BOTM,NBOTM,BUFF,
     &                       IBOUND,DELR,DELC,CV,LBOTM
      use GWFBASMODULE, ONLY:DELT,PERTIM,TOTIM,ICHFLG,HDRY
      use GWFLPFMODULE, ONLY:HK,VKA,VKCB,HANI,SC1,SC2,WETDRY,LAYFLG,
     1                       LAYWET,LAYVKA,CHANI,LAYAVG,LAYTYP,WETFCT,
     2                       IWETIT,IHDWET,ILPFCB 
      use VSFMODULE 
C     ------------------------------------------------------------------
      CHARACTER(len=24) ANAME(2)
      CHARACTER(len=16) TEXT
      CHARACTER(len=4) EXT
      CHARACTER(len=20) FMT
      CHARACTER(len=200) OFILE,FNAME,LINE
C
      REAL      PRESS,EFSAT,TTOP,BBOT,N,NODE,DLP,PD
      INTEGER   VGFLG      
C
C	
      PARAMETER (ONE=1)
      EXT ='.sat'
      ANAME(1)='INITIAL WATER SATURATION'
      ANAME(2)='          SOIL TYPE FLAG'
C Iac: 
      CALL SVSF2VSF1PNT(IGRID)  
C     ------------------------------------------------------------------
C
C1---- READ AVERAGING FLAG TO DETERMINE INTERCELL METHOD,
C1---- INITIAL SATURATION FLAG, AND HYDROSTATIC INITIAL CONDITION FLAG
      LLOC=1     
      CALL URDCOM(IN,0,LINE)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IAVG,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISATFL,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IHYDST,R,IOUT,IN)
C
C2---- READ REFOC ARRAY IF REQUESTED (IREFOC IS POSITIVE)
      IF (IREFOC.GT.ZERO) THEN
		DO 1 K=1,IREFOC
	      LLOC=1
            CALL URDCOM(IN,0,LINE)
            CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,REFOC(K,1),IOUT,IN)
	        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,REFOC(K,2),IOUT,IN)		  
    1     CONTINUE
      ENDIF 
C
C3---- READ THE BOUNDARY PRESSURES FOR INTERNAL TABLE
	LLOC=1
      CALL URDCOM(IN,0,LINE)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,PTABA,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,PTABB,IOUT,IN)
	PTAB=0.0
	PTAB(1)=PTABA
	PTAB(NTAB)=PTABB
C
C4---- READ THE SOIL CHARACTERISTIC FORM FLAG (ISC)
	DO 2 M=1,SLNUM
	  LLOC=1
        CALL URDCOM(IN,0,LINE)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,ISC(M),R,IOUT,IN)
C4A---- ERROR IF ISC(M) DOES NOT = +/-1 OR +/-2
        IF (ABS(ISC(M)).GT.3.OR.ABS(ISC(M)).LT.1) THEN
        WRITE(*,4)
		STOP
    4		FORMAT ('ERROR: SOIL CHARACTERISTIC FORM FLAG (ISC)',
     &              'MUST EQUAL +/-1, +/2 OR +/-3')
     
	  ENDIF
    2 CONTINUE
C
C5---- READ THE SOIL PARAMETERS FOR EACH SOIL TYPE
	DO 3 M=1,SLNUM
	    LLOC=1
          CALL URDCOM(IN,0,LINE)
          CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,ALPHA(M,1),IOUT,IN)
	    CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,VGN(M,1),IOUT,IN)
C5A--- IF DUAL PARAMETERS ARE SPECIFIED (ISC(M)=+/-2),READ SECOND SET
		IF (ABS(ISC(M)).GE.2) THEN
	      LLOC=1
            CALL URDCOM(IN,0,LINE)
            CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,ALPHA(M,2),IOUT,IN)
	      CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,VGN(M,2),IOUT,IN)
		ELSE
C5B--- OTHERWISE, STORE IDENTICAL VALUES IN ROW 2
			ALPHA(M,2)=ALPHA(M,1)
			VGN(M,2)=VGN(M,1)
		ENDIF
    3	CONTINUE        	
	DO 7 M=1,SLNUM
C5C--- READ RESIDUAL SATURATION AND EFFECTIVE POROSITY FOR EACH SOIL TYPE
	    LLOC=1
          CALL URDCOM(IN,0,LINE)
		CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,RSAT(M),IOUT,IN)		
	    CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,EFFP(M),IOUT,IN)
    7	CONTINUE
C
C6---- PRINT SOIL PARAMETERS TABLE IN OUTPUT FILE
      WRITE(IOUT,1001)
 1001 FORMAT(1X,/15X,'UNSATURATED SOIL PARAMETERS FOR REF1 PACKAGE:',/1X,
     1 ' STYPE       ISC    ALPHA          VGN',
     2 '         RSAT          EFFP',/1X,75('-'))
	DO 8 M=1,SLNUM
	  DO 9 L=1,2
	  IF (ABS(ISC(M)).EQ.1.AND.L.EQ.2) CYCLE
        WRITE(IOUT,1002) M,L,ALPHA(M,L),VGN(M,L),RSAT(M),EFFP(M)
 1002   FORMAT(1X,I4,8X,I2,4G14.5)
    9   CONTINUE
    8 CONTINUE
C
C7---- IF ISATFL IS >0, READ INITIAL SATURATIONS
	IF (ISATFL.GT.ZERO) THEN
		DO 5 K=1,NLAY
			CALL U2DREL(SAT(1,1,K),ANAME(1),NROW,NCOL,K,IN,IOUT)
    5		CONTINUE
	ENDIF 
C
C8---- READ SOIL TYPE ARRAY FOR ALL MODEL LAYERS   
      DO 10 K=1,NLAY
        CALL U2DINT(STYPE(1,1,K),ANAME(2),NROW,NCOL,K,IN,IOUT)        
   10	CONTINUE
C	
C9---- OPEN OUTPUT FILE
	IF (IREFCB.NE.0) THEN
	  OFILE=FNAME
	  NUM=INDEX(OFILE,' ')
	  WRITE(OFILE(NUM-4:NUM),'(A4)')EXT
	  IF(IREFCB.LT.0)THEN
		OPEN (UNIT=ABS(IREFCB),FILE=OFILE,FORM='UNFORMATTED',
     &	STATUS='UNKNOWN')
	  ELSE
	    OPEN (UNIT=IREFCB,FILE=OFILE,FORM='FORMATTED',
     &	STATUS='UNKNOWN')
	  ENDIF
	ENDIF
C
C10--- GENERATE SPECIFIED PORE PRESSURES FOR INTERNAL SOIL CHARACTERISTICS TABLE
      DLP=(ALOG10(-PTABB)-ALOG10(-PTABA))/(NTAB-1)
	DO 30 I=1,NTAB
        ALP=ALOG10(-PTABA)+(I-1)*DLP
        PTAB(I)=-10**ALP
   30	CONTINUE
C
C10A--- GENERATE SOIL CHARACTERISTICS TABLE (KTAB,STAB,CTAB)
	DO 50 M=1,SLNUM
		DO 60 K=1,NLAY
		DO 60 I=1,NROW
		DO 60 J=1,NCOL
			IF (STYPE(J,I,K).EQ.M) THEN
				P=EFFP(M)
				RSATC=RSAT(M)*P
				EXIT
				EXIT
				EXIT
			ENDIF
   60		CONTINUE
		DO 75 I=1,NTAB
		  KTAB(I,M)=SVSF1REF1KP(PTAB(I),ALPHA(M,1),VGN(M,1),ISC(M))
		  CTAB(I,M)=SVSF1REF1CP(PTAB(I),RSATC,P,ALPHA(M,2),
     &                          VGN(M,2),ISC(M))	 		 		  
		  STAB(I,M)=SVSF1REF1SP(PTAB(I),RSAT(M),ALPHA(M,2),
     &                          VGN(M,2),ISC(M))
   75		CONTINUE
   50	CONTINUE
C
C11--- IF INITIAL SOIL SATURATION ARRAY READ,
C11--- ADJUST HEAD IN UNSATURATED CELLS ACCORDINGLY
	IF (ISATFL.GT.0) THEN
C11A--  HYDROSTATIC EQUILIBRIUM CAN NOT BE REQUESTED IF INITIAL SOIL SATURATION IS READ
	  IF (IHYDST.GT.0) THEN
		WRITE(*,51)
		STOP
   51	  FORMAT ('ERROR:  HYDROSTATIC EQUILIBRIUM CAN NOT BE' 
     &      ,'REQUESTED (IHYDST>0)',/,8X, 'IF INITIAL SOIL SATURATION '
     &      ,'IS READ (ISATFL>0)')
	  ENDIF
C      
	  DO 55 K=1,NLAY
	  DO 55 I=1,NROW 
	  DO 55 J=1,NCOL
		BBOT=BOTM(J,I,LBOTM(K))
		TTOP=BOTM(J,I,LBOTM(K)-1)
		M=STYPE(J,I,K)
C	
C11B--- CHECK STYPE FOR SATURATED/OLF CELLS (STYPE(J,I,K)<=0)
		IF (M.LE.0) CYCLE
		IF (IBOUND(J,I,K).EQ.0) CYCLE
 		EFSAT=(SAT(J,I,K)-RSAT(M))/(1-RSAT(M))
		PRESS=SVSF1REF1PS(EFSAT,ALPHA(M,2),VGN(M,2),ISC(M))
		NODE=(TTOP+BBOT)/2		
	    HNEW(J,I,K)=NODE+PRESS
		IF (EFSAT.EQ.1.0) HNEW(J,I,K)=NODE
   55	  CONTINUE
	ENDIF
C
C12--- IF HYDROSTATIC EQUILIBRIUM REQUESTED, DETERMINE WATERTABLE POSITION
C12--- AND SET STARTING HEADS
	IF (IHYDST.GT.0) THEN
		DO 25 I=1,NROW
	    DO 25 J=1,NCOL
		   IFLG=0
		   WTVAL=0.0		
		  DO 25 K=NLAY,1,-1
	        IF (IBOUND(J,I,K).EQ.0) CYCLE
			HD=HNEW(J,I,K)				
			BBOT=BOTM(J,I,LBOTM(K))
			TTOP=BOTM(J,I,LBOTM(K)-1)
			NODE=(TTOP+BBOT)/2
			IF(HD.LT.NODE.AND.IFLG.EQ.0) THEN
				WTVAL=HD
				IFLG=1
			ELSEIF (IFLG.EQ.1)THEN
				HNEW(J,I,K)=WTVAL
			ENDIF 
   25		CONTINUE
	ENDIF
C
C13--- IF BINARY FILE REQUESTED, CALCULATE SOIL SATURATIONS 
C13--- FROM INITIAL HEADS USING INTERNAL TABLE
	IF (IREFOC.LE.ZERO.AND.IREFCB.NE.ZERO) THEN
	  ALP1=ALOG10(-PTAB(1))
	  DLP=(ALOG10(-PTAB(NTAB))-ALP1)/(NTAB-1) 
	  DO 15 K=1,NLAY
	  DO 15 I=1,NROW
	  DO 15 J=1,NCOL
	    HD=HNEW(J,I,K)
	    BBOT=BOTM(J,I,LBOTM(K))
	    TTOP=BOTM(J,I,LBOTM(K)-1)
	    NODE=(TTOP+BBOT)/2		
	    PRESS=HD-NODE
	    M=STYPE(J,I,K)
C
C13A--- IF CELL TYPE IS SATURATED/OLF, STORE SATURATION = 1
	  IF (HD.GE.NODE.OR.M.LE.0) THEN
		SAT(J,I,K)=ONE
	  ELSEIF (PRESS.GE.PTAB(NTAB).AND.PRESS.LE.PTAB(1))THEN
		IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		S2=(STAB(IT+1,M)-STAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		TI=STAB(IT,M)+S2*(PRESS-PTAB(IT))
		SAT(J,I,K)=TI
	  ELSE
		SAT(J,I,K)=SVSF1REF1SP(PRESS,RSAT(M),ALPHA(M,2),VGN(M,2),ISC(M))
	  ENDIF
C13B---  CONVERT TO MOISTURE CONTENTS IF REQUESTED
	  IF (ISATOC.LE.ZERO) THEN
	    SAT(J,I,K)=SAT(J,I,K)*EFFP(M)
	  ENDIF
   15   CONTINUE
C
   	  IFIRST=1
        TEXT='      SATURATION'
	  IF(ISATOC.LE.ZERO) TEXT='    SOIL MOISTURE'
	  DO 16 K=1,NLAY 
	    KK=K
	    IF(IFIRST.EQ.1) THEN
C13C----- MOISTURE CONTENTS SAVED
	      IF(ISATOC.LT.1) THEN
		   IF (IREFOC.GT.ZERO) WRITE(IOUT,76) IREFCB,KKSTP,KPER
		   IF (IREFOC.LE.ZERO) WRITE(IOUT,77) IREFCB
C13D----- SATURATIONS SAVED
	      ELSEIF(ISATOC.GE.1)THEN
		    IF (IREFOC.GT.ZERO) WRITE(IOUT,78) IREFCB,KKSTP,KPER
			IF (IREFOC.LE.ZERO) WRITE(IOUT,79) IREFCB
	      ENDIF
	    ENDIF
C13E-----BINARY FILE
          IF(IREFCB.LT.ZERO) THEN
            CALL ULASAV(SAT(1,1,K),TEXT,KKSTP,KPER,PERTIM,TOTIM,NCOL,
     1                NROW,KK,-IREFCB)
          ELSE
C13F-----ASCII FILE
	      FMT='(___F8.4)'
	      WRITE (FMT(2:4),'(I3)')NCOL
            CALL ULASV2(SAT(1,1,K),TEXT,KKSTP,KPER,PERTIM,TOTIM,NCOL,
     1                NROW,KK,IREFCB,FMT,IFIRST,IBOUND(1,1,K))
	    ENDIF
	    IFIRST=0
   16   CONTINUE
   76	  FORMAT(1X,/1X,'MOISTURE CONTENTS  WILL BE SAVED ON',
     1' UNIT',I4,' AT END OF TIME STEP',I3,', STRESS PERIOD',I3)

   77	  FORMAT(1X,/1X,'MOISTURE CONTENTS  WILL BE SAVED ON',
     1' UNIT',I4,' FOR ALL TIME STEPS')
   78	  FORMAT(1X,/1X,'SATURATIONS WILL BE SAVED ON',
     1' UNIT',I4,' AT END OF TIME STEP',I3,', STRESS PERIOD',I3)
   79	  FORMAT(1X,/1X,'SATURATIONS WILL BE SAVED ON',
     1' UNIT',I4,' FOR ALL TIME STEPS')
	ENDIF
C	 
C14---RETURN
	RETURN	
	END
C
C=======================================================================
      SUBROUTINE VSF2REF1FM(KKSTP,KPER,KITER,IGRID,Iunitcfl,
     &                      Iunitsfr,Iunitlak)
C-----Version 2011
C-----VERSION 07MARCH2006
C     ******************************************************************
C     CALCULATE INTERCELL RELATIVE PERMEABILITY  
C	AND USE TO ADJUST CONDUCTANCES 
C     ******************************************************************
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:NCOL,NROW,NLAY,HNEW,BOTM,NBOTM,CC,CR,CV,
     &                       HOLD,HCOF,RHS,LAYCBD,LBOTM,IBOUND,
     &                       DELR,DELC
      use GWFBASMODULE, ONLY:DELT,PERTIM,TOTIM,ICHFLG,HDRY
      use GWFLPFMODULE, ONLY:HK,VKA,VKCB,HANI,SC1,SC2,WETDRY,LAYFLG,
     1                       LAYWET,LAYVKA,CHANI,LAYAVG,LAYTYP,WETFCT,
     2                       IWETIT,IHDWET,ILPFCB 
      use VSFMODULE 
C     ------------------------------------------------------------------
C
      REAL	  NODE,KR1,KR2,PRESS,SATNEW,SATOLD,S2,DSDT,THCK,
     &        CHCH1,CHCH2,CHCH3,CHCH4,CHCH5,CHCH6,HD1,HD2
C
      INTEGER    IT,KSTEP,KPER,KITER,ICYCLE
C Iac:
      integer Iunitsfr,Iunitlak
C --
      DIMENSION  TOP(NCOL,NROW,NLAY)
      
C
      PARAMETER (ONE=1.0)
C Iac: 
      CALL SVSF2VSF1PNT(IGRID)      
C     ------------------------------------------------------------------
	  TLED=1/DELT
C
C1---- IF BEGINING OF SIMULATION, SET CVS=CV
      IF (KKSTP.EQ.1.AND.KPER.EQ.1.AND.KITER.EQ.1) THEN
		CVS=CV
      ENDIF
C
C2---- ESTABLISH BOUNDARY VALUES FOR INTERNAL SOIL CHARACTERISTICS TABLE
	ALP1=ALOG10(-PTAB(1))
	DLP=(ALOG10(-PTAB(NTAB))-ALP1)/(NTAB-1) 
	PTAB1=PTAB(1)
	PTABN=PTAB(NTAB)
C
C3---- CALCULATE UNSATURATED STORAGE FOR EACH CELL AND STORE IN RHS AND HCOF ARRAYS
	DO 10 K=1,NLAY
	DO 10 I=1,NROW
	DO 10 J=1,NCOL
		M=STYPE(J,I,K)
C
C4--- COMPUTE NODE LOCATION AND PRESSURE
		HD=HNEW(J,I,K)
		BBOT=BOTM(J,I,LBOTM(K))
	    TTOP=BOTM(J,I,LBOTM(K)-1)
	    NODE=(TTOP+BBOT)/2		
		THCK=TTOP-BBOT
		PRESS=HD-NODE
		IF (IBOUND(J,I,K).LE.0) GOTO 7
C
C5--- IF CELL TYPE IS SATURATED/OLF, CYCLE
	    IF (M.LE.0) CYCLE
C
C6--- CALCULATE SOIL SATURATION FROM PREVIOUS ITERATION (SATNEW)     
	    IF (HD.GE.NODE) THEN
	  	  SATNEW=ONE
	    ELSEIF (PRESS.GE.PTAB(NTAB).AND.PRESS.LE.PTAB(1))THEN
C
C6A--- INTERPOLATE VALUE FROM INTERNAL TABLE	  
		  IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1 
		  S2=(STAB(IT+1,M)-STAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		  TI=STAB(IT,M)+S2*(PRESS-PTAB(IT))
		  SATNEW=TI
          ELSE
C
C6B--- CALCULATE VALUE DIRECTLY	   
	      SATNEW=SVSF1REF1SP(PRESS,RSAT(M),ALPHA(M,2),VGN(M,2),ISC(M))
	    ENDIF  
C
C7--- CALULATE SOIL SATURATION FROM PREVIOUS TIME STEP (SATOLD)
	    HD=HOLD(J,I,K)
	    PRESS=HD-NODE
	    IF (HD.GE.NODE) THEN
   		  SATOLD=ONE 
	    ELSEIF (PRESS.GE.PTAB(NTAB).AND.PRESS.LE.PTAB(1))THEN
C
C7A--- INTERPOLATE VALUE FROM INTERNAL TABLE	  
		  IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		  S2=(STAB(IT+1,M)-STAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		  TI=STAB(IT,M)+S2*(PRESS-PTAB(IT))
		  SATOLD=TI
          ELSE
C
C7B--- CALCULATE VALUE DIRECTLY
	      SATOLD=SVSF1REF1SP(PRESS,RSAT(M),ALPHA(M,2),VGN(M,2),ISC(M))  	  
	    ENDIF		
C
C8--- CALCULATE SOIL MOISTURE TIME DERIVATIVE TERM FOR MODIFIED PICARD ITERATION
C
	    P=EFFP(M)
	    DSDT=P*(SATNEW-SATOLD)*TLED*DELR(J)*DELC(I)*THCK
C
C9--- CALCULATE SOIL WATER CAPACITY FOR RHS  
C9--- USING THE HEAD VALUE FROM THE CURRENT ITERATION AND  
C9--- ADJUST SPECIFIC STORAGE TERM WITH AVERAGE SOIL SATURATION  	    
	     HD=HNEW(J,I,K)  	    				 		  
	     PRESS=HD-NODE	 		 		  
	     IF (HD.GE.NODE) THEN 		 		  
	       SPSC=0.0 	       		  
		   SSTO=SC1(J,I,K)*TLED 	   			  
	     ELSEIF (PRESS.GE.PTAB(NTAB).AND.PRESS.LE.PTAB(1))THEN
C
C9A--- INTERPOLATE VALUE FROM INTERNAL TABLE	  
		   IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		   S1=(CTAB(IT+1,M)-CTAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		   CI=CTAB(IT,M)+S1*(PRESS-PTAB(IT))
		   SPSC=CI
		   SPSC=SPSC*DELR(J)*DELC(I)*THCK*TLED	 
  	       SSTO=TLED*SC1(J,I,K)*SATOLD
	     ELSE
C
C9B--- CALCULATE VALUE DIRECTLY
		   RSATC=RSAT(M)*P 	 	 		  
		   SPSC=SVSF1REF1CP(PRESS,RSATC,P,ALPHA(M,2),VGN(M,2),ISC(M))	 		 		  
		   SPSC=SPSC*DELR(J)*DELC(I)*THCK*TLED	 
		   SSTO=TLED*SC1(J,I,K)*SATOLD
	     ENDIF  
C
C10--- ADD DERIVATIVE TERM TO RHS; USE HEAD FROM PREVIOUS ITERATION  	    	  
	     RHO=SPSC+SSTO    	  
	     HCOF(J,I,K)=HCOF(J,I,K)-RHO
           RHS(J,I,K)=RHS(J,I,K)+DSDT-SPSC*HNEW(J,I,K)-SSTO*HOLD(J,I,K) 
C
C11---- CALCULATE RELATIVE PERMEABILITIES AND APPLY TO CONDUCTANCE ARRAYS CR,CC,CV
C
C11A--- IF CELL IS SATURATED, SET KREL = 1.0
    7	    IF (HD.GE.NODE) THEN
		  KREL(J,I,K)=ONE
C
C11B--- OTHERWISE, LOOK UP K IN TABLE IF PRESSURE IS WITHIN SPECIFIED INTERVAL
	    ELSEIF (PRESS.GE.PTABN.AND.PRESS.LE.PTAB1)THEN
	      IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		  S1=(KTAB(IT+1,M)-KTAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		  CI=KTAB(IT,M)+S1*(PRESS-PTAB(IT))
		  KREL(J,I,K)=CI
C
C11C--- IF PRESSURE IS NOT WITHIN INTERVAL, COMPUTE DIRECTLY
	    ELSE
	      KREL(J,I,K)=SVSF1REF1KP(PRESS,ALPHA(M,1),VGN(M,1),ISC(M))	
	    ENDIF
   10	CONTINUE
C
C12---- CALCULATE HORIZONTAL AND VERTICAL CONDUCTANCES FOR ALL CELLS
C12---- USING RELATIVE PERMEABILITY
	DO 20 K=1,NLAY
		DO 20 I=1,NROW
		DO 20 J=1,NCOL
C12A--- IF CELL TYPE IS SATURATED/OLF, CYCLE
		M=STYPE(J,I,K)
	    IF (M.LE.0) CYCLE
		KR1=KREL(J,I,K)
C
C12B---- IF HORIZONTAL CONDUCTANCE = 0, GO ON TO VERTICAL LEAKANCE
		IF(CR(J,I,K).NE.ZERO) GO TO 30
		IF(CC(J,I,K).NE.ZERO) GO TO 40
		GO TO 50
C
C12C--- ADJUST CONDUCTANCES USING INTERCELL AVERAGING
C12C--- FOR RELATIVE PERMEABILITY
   30		IF(J.EQ.NCOL) GO TO 40
			KR2=KREL(J+1,I,K)
C
C12D--- OPTIONS FOR INTERCELL AVERAGING OF RELATIVE PERMEABILITY 
C12D--- GEOMETRIC MEAN, ARITHMETIC MEAN AND UPSTREAM WEIGHTING
			IF (IAVG.EQ.1) THEN
				CR(J,I,K)=CR(J,I,K)*(KR1*KR2)**(0.5)
			ELSEIF (IAVG.EQ.2)THEN
				CR(J,I,K)=CR(J,I,K)*(KR1+KR2)/2.
			ELSEIF (IAVG.EQ.3)THEN
				HD1 = HNEW(J,I,K)
				HD2 = HNEW(J+1,I,K)
				IF (HD1.GT.HD2) THEN
					CR(J,I,K)=CR(J,I,K)*KR1
				ELSE 
					CR(J,I,K)=CR(J,I,K)*KR2
				ENDIF
			ENDIF			
C
C12E--- IF THIS IS NOT THE LAST ROW(FRONTMOST) THEN CALCULATE
C12E--- BRANCH CONDUCTANCE IN THE COLUMN DIRECTION (CC) TO THE FRONT.
   40		IF(I.EQ.NROW) GO TO 50
			KR2=KREL(J,I+1,K)
			IF (IAVG.EQ.1) THEN
				CC(J,I,K)=CC(J,I,K)*(KR1*KR2)**(0.5)
			ELSEIF (IAVG.EQ.2)THEN
				CC(J,I,K)=CC(J,I,K)*(KR1+KR2)/2.
			ELSEIF (IAVG.EQ.3)THEN
				HD1 = HNEW(J,I,K)
				HD2 = HNEW(J,I+1,K)
				IF (HD1.GT.HD2) THEN
					CC(J,I,K)=CC(J,I,K)*KR1
				ELSE 
					CC(J,I,K)=CC(J,I,K)*KR2
				ENDIF
			ENDIF
C
C12F--- IF THIS IS NOT THE LAST LAYER (BOTTOM) THEN ADJUST
C12F--- VERTICAL CONDUCTANCE IN THE LAYER DIRECTION (CV)
   50 	IF(K.GE.NLAY) GOTO 20
      		KR2=KREL(J,I,K+1)
			IF (IAVG.EQ.1) THEN
				CV(J,I,K)=CVS(J,I,K)*((KR1*KR2)**(0.5))
			ELSEIF (IAVG.EQ.2)THEN		
				CV(J,I,K)=CVS(J,I,K)*(KR1+KR2)/2.
			ELSEIF (IAVG.EQ.3)THEN
				HD1 = HNEW(J,I,K)
				HD2 = HNEW(J,I,K+1)
				IF (HD1.GE.HD2) THEN
					CV(J,I,K)=CVS(J,I,K)*KR1
				ELSE 
					CV(J,I,K)=CVS(J,I,K)*KR2
				ENDIF
			ENDIF
   20 CONTINUE
C
C Iac:
C8------ADD OVERLAND FLOW TO STREAMS, LAKES AND CONDUITS. 
      if ( Iunitcfl>0 .AND. (Iunitsfr>0.OR.Iunitlak>0)) then
           call VSF2OLF(Iunitsfr, Iunitlak)
      end if 
C ---
C13--- RETURN
      RETURN
	END
c
C=======================================================================
      SUBROUTINE VSF2REF1BD(KKSTP,KPER,IBDRET,IGRID)
C-----Version 2011
C-----VERSION 07MARCH2006 RBT 
C     ******************************************************************
C     CALCULATE SOIL SATURATION DISTRIBUTION
C	AND WRITE TO REF OUTPUT FILE 
C     ******************************************************************
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:NCOL,NROW,NLAY,HNEW,BOTM,NBOTM,CC,CR,CV,
     &                       HOLD,HCOF,RHS,LAYCBD,LBOTM,IOUT,BUFF,
     &                       IBOUND,DELR,DELC
      use GWFBASMODULE, ONLY:DELT,PERTIM,TOTIM,ICHFLG,HDRY,
     &                       ICBCFL,VBVL,VBNM,MSUM
      use GWFLPFMODULE, ONLY:HK,VKA,VKCB,HANI,SC1,SC2,WETDRY,LAYFLG,
     1                       LAYWET,LAYVKA,CHANI,LAYAVG,LAYTYP,WETFCT,
     2                       IWETIT,IHDWET,ILPFCB 
      use GWFBCFMODULE, ONLY:IBCFCB
      use VSFMODULE 
C     ------------------------------------------------------------------
      DOUBLE PRECISION HO,HN,SSLM,SLMIN,SLMOUT,UUSTRG,USTOUT,USTIN
      CHARACTER*16 TEXT,TEXT1
      CHARACTER*20 FMT
C
      REAL	TTOP,BBOT,HD,PRESS,USTP,P,NODE,LIM,HDIFF,FLUX,SLM,
     &		DSDT,OLDRHO,NEWRHO,STRG,USTRG
C
      INTEGER UPER,KKSTP,IBD,KPER
C
      DIMENSION  USTP(IREFOC), SLM(NCOL,NROW,NLAY)
      DIMENSION	 UPER(IREFOC), USTRG(NCOL,NROW,NLAY)
C
      PARAMETER (ONE=1)
      PARAMETER (LIM=0.005)
      TEXT = '   SOIL MOISTURE'
      TEXT1= '   UNSAT STORAGE'
C Iac: 
      CALL SVSF2VSF1PNT(IGRID) 
C     ------------------------------------------------------------------
C1------SET IBD TO INDICATE IF CELL-BY-CELL BUDGET VALUES WILL BE SAVED.
      IBD=0
C      IF(IBCFCB.LT.0 .AND. ICBCFL.NE.0) IBD=-1
C      IF(ILPFCB.LT.0 .AND. ICBCFL.NE.0) IBD=-1
C      IF(IBCFCB.GT.0) IBD=ICBCFL
C      IF(ILPFCB.GT.0) THEN
C		IBD=ICBCFL
C		IBCFCB=ILPFCB
C      END IF
C
C2---- CALCULATE SOIL SATURATIONS FOR UNSATURATED CELLS
	ALP1=ALOG10(-PTAB(1))
	DLP=(ALOG10(-PTAB(NTAB))-ALP1)/(NTAB-1) 
C
	BUFF=0.0
	DO 15 K=1,NLAY
	DO 15 I=1,NROW
	DO 15 J=1,NCOL
	  HD=HNEW(J,I,K)
	  BBOT=BOTM(J,I,LBOTM(K))
	  TTOP=BOTM(J,I,LBOTM(K)-1)
	  NODE=(TTOP+BBOT)/2		
	  PRESS=HD-NODE
	  M=STYPE(J,I,K)
	  IF (M.LE.ZERO) CYCLE
	  IF (HD.GE.NODE) THEN
		SAT(J,I,K)=ONE
C	  
	  ELSEIF (PRESS.GE.PTAB(NTAB).AND.PRESS.LE.PTAB(1))THEN
		IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		S2=(STAB(IT+1,M)-STAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		TI=STAB(IT,M)+S2*(PRESS-PTAB(IT))
		SAT(J,I,K)=TI
	  ELSE
		SAT(J,I,K)=SVSF1REF1SP(PRESS,RSAT(M),ALPHA(M,2),VGN(M,2),ISC(M))
	  ENDIF
C
C3--- IF MOISTURE CONTENTS REQUESTED FOR OUTPUT, MULTIPLY SATURATION BY EFFP
      IF (ISATOC.LT.1) THEN
	    BUFF(J,I,K)=SAT(J,I,K)*EFFP(M)
      ELSE
		BUFF(J,I,K)=SAT(J,I,K)
	  ENDIF
   15 CONTINUE
C
	IF (IREFCB.EQ.ZERO) GOTO 90
C
C4---- WRITE CELL-BY-CELL SOIL SATURATIONS / MOISTURE CONTENTS
	IF (IREFOC.GT.ZERO) THEN
	  DO 35 L=1,IREFOC
		UPER(L)=INT(REFOC(L,1))
		USTP(L)=REFOC(L,2)
   35	  CONTINUE
C		
C4A--- DETERMINE REQUESTED STRESS PERIOD AND ELAPSED TIME 
	  DO 40 L=1,IREFOC
		IF (USTP(L).LT.ZERO) THEN
			STP=INT(ABS(USTP(L)))
			IF (KPER.EQ.UPER(L).AND.KKSTP.EQ.STP) THEN
				GOTO 50
			ENDIF
		ELSE
		    DIFF=ABS(TOTIM-USTP(L))
		    IF (KPER.EQ.UPER(L).AND.DIFF.LE.LIM) THEN
				GOTO 50
			ENDIF
		ENDIF
   40	  CONTINUE
	  GOTO 90
	ENDIF
C
   50	IFIRST=1
      IF (ISATOC.GT.ZERO) TEXT='      SATURATION'
	DO 16 K=1,NLAY 
	  KK=K
	  IF(IFIRST.EQ.1) THEN
C4B----- MOISTURE CONTENTS SAVED
	    IF(ISATOC.LT.1) WRITE(IOUT,74) IREFCB,KKSTP,KPER
C4B----- SATURATIONS SAVED
	    IF(ISATOC.GE.1) WRITE(IOUT,76) IREFCB,KKSTP,KPER
	  ENDIF
C4C-----BINARY FILE
        IF(IREFCB.LT.ZERO) THEN
           CALL ULASAV(BUFF(1,1,K),TEXT,KKSTP,KPER,PERTIM,TOTIM,NCOL,
     1                NROW,KK,-IREFCB)
        ELSE
C4D-----ASCII FILE
	    FMT='(___F8.4)'
	    WRITE (FMT(2:4),'(I3)')NCOL
           CALL ULASV2(BUFF(1,1,K),TEXT,KKSTP,KPER,PERTIM,TOTIM,NCOL,
     1                NROW,KK,IREFCB,FMT,IFIRST,IBOUND(1,1,K))
	  ENDIF
	  IFIRST=0
   16 CONTINUE
C
   74	  FORMAT(1X,/1X,'MOISTURE CONTENTS  WILL BE SAVED ON',
     1' UNIT',I4,' AT END OF TIME STEP',I3,', STRESS PERIOD',I3)
   76	  FORMAT(1X,/1X,'SATURATIONS WILL BE SAVED ON',
     1' UNIT',I4,' AT END OF TIME STEP',I3,', STRESS PERIOD',I3)
C
C5---- STORE SOIL SATURATION AND STORAGE FLOW FOR FLOW BUDGET
   90	SLMIN=ZERO
	SLMOUT=ZERO
	USTIN=ZERO
	USTOUT=ZERO
      DO 60 K=1,NLAY
	DO 60 I=1,NROW
	DO 60 J=1,NCOL
	    M=STYPE(J,I,K)
C
C5A--- IF CELL TYPE IS SATURATED/OLF OR INACTIVE, DO NOT CALCULATE FLOW
		IF(M.LE.0.OR.IBOUND(J,I,K).LE.0)CYCLE
C
C5A--- ASSIGN VALUES
		P = EFFP(M)
		BBOT=BOTM(J,I,LBOTM(K))
		TTOP=BOTM(J,I,LBOTM(K)-1)
	    NODE=(TTOP+BBOT)/2
		THCK=TTOP-BBOT
		TLED=1/DELT    
  	    SATNEW=SAT(J,I,K)
C
C5B--- SET SATOLD = SOIL SATURATION FROM PREVIOUS TIME STEP   
	  HO=HOLD(J,I,K) 	  	  
	  PRESS=HO-NODE 	     		
	  IF (HO.GE.NODE) THEN
		SATOLD=ONE
C	  
	  ELSEIF (PRESS.GE.PTAB(NTAB).AND.PRESS.LE.PTAB(1))THEN
		IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		S2=(STAB(IT+1,M)-STAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		TI=STAB(IT,M)+S2*(PRESS-PTAB(IT))
		SATOLD=TI
	   ELSE 	    
	      SATOLD=SVSF1REF1SP(PRESS,RSAT(M),ALPHA(M,2),VGN(M,2),ISC(M))  	  
	   ENDIF
C5C--- CALCULATE CHANGE IN VOLUMETRIC SOIL MOISTURE OVER TIME STEP	   
		DSDT=P*DELR(J)*DELC(I)*THCK*(SATOLD-SATNEW)*TLED
C
C5D--- CALCULATE SPECIFIC STORAGE FOR PREVIOUS TIME STEP  	     		       	    
	   IF (HO.GE.NODE) THEN 		       	    
	     OLDRHO=SC1(J,I,K)*TLED 	   	  
	   ELSE 	          
		 OLDRHO=TLED*SC1(J,I,K)*SATOLD 
	   ENDIF  
C 
C5E--- CALCULATE SPECIFIC STORAGE FOR CURRENT TIME STEP    	       	    
	   HN=HNEW(J,I,K)
	   IF (HN.GE.NODE) THEN 		       	    
	     NEWRHO=SC1(J,I,K)*TLED 	   	  
	   ELSE 	    	    
		 NEWRHO=TLED*SC1(J,I,K)*SATNEW 
	   ENDIF 
C
C5F--- STORAGE FLOW = OLD STORAGE MINUS NEW STORAGE  	
	    HDIFF=HO-HN
		STRG=HDIFF*(OLDRHO+NEWRHO)/2
C
C5G--- STORE CELL-BY-CELL SOIL MOISTURE AND REFAT STORAGE FLOW IN BUFFER AND ADD TO ACCUMULATORS.  			
		SLM(J,I,K)=DSDT
	    USTRG(J,I,K)=STRG
		SSLM=DSDT
		UUSTRG=STRG
C
		IF(DSDT) 295,59,296
  295		SLMOUT=SLMOUT-SSLM
		GO TO 59 
  296		SLMIN=SLMIN+SSLM
C
   59 CONTINUE
        IF(STRG) 297,60,298
  297	USTOUT=USTOUT-UUSTRG
		GO TO 60 
  298	USTIN=USTIN+UUSTRG
C
   60 END DO
C
C5I--- IF IBD FLAG IS SET, RECORD THE CONTENTS OF THE SOIL MOISTURE AND STORAGE ARRAYS.
	TEXT='   SOIL MOISTURE'
	IF(IBD.EQ.1) CALL UBUDSV(KKSTP,KPER,TEXT,
     1                       IBCFCB,SLM,NCOL,NROW,NLAY,IOUT)
      IF(IBD.EQ.2) CALL UBDSV1(KKSTP,KPER,TEXT,IBCFCB,
     1            SLM,NCOL,NROW,NLAY,IOUT,DELT,PERTIM,TOTIM,IBOUND)
	IF(IBD.EQ.1) CALL UBUDSV(KKSTP,KPER,TEXT1,
     1                       IBCFCB,USTRG,NCOL,NROW,NLAY,IOUT)
      IF(IBD.EQ.2) CALL UBDSV1(KKSTP,KPER,TEXT1,IBCFCB,
     1            USTRG,NCOL,NROW,NLAY,IOUT,DELT,PERTIM,TOTIM,IBOUND)

C5J--- ADD TOTAL SOIL MOISTURE AND STORAGE RATES AND VOLUMES TO VBVL & PUT TITLE IN VBNM.
	SMIN=SLMIN
	SMOUT=SLMOUT
	VBVL(1,MSUM)=VBVL(1,MSUM)+SMIN*DELT
	VBVL(2,MSUM)=VBVL(2,MSUM)+SMOUT*DELT
	VBVL(3,MSUM)=SMIN
	VBVL(4,MSUM)=SMOUT
	VBNM(MSUM)=TEXT	      
	MSUM=MSUM+1
C
	USIN=USTIN
	USOUT=USTOUT
	VBVL(1,MSUM)=VBVL(1,MSUM)+USIN*DELT
	VBVL(2,MSUM)=VBVL(2,MSUM)+USOUT*DELT
	VBVL(3,MSUM)=USIN
	VBVL(4,MSUM)=USOUT
	VBNM(MSUM)=TEXT1	      
	MSUM=MSUM+1
C
C6---- RETURN.
      RETURN
      END
C================================
      Subroutine SVSF2VSF1PNT(IGRID)
C  Change VSF data to a different grid.
        use VSFMODULE
        
        ISUM=>VSFDAT(IGRID)%ISUM
        LCREFOC=>VSFDAT(IGRID)%LCREFOC
        LCCVS=>VSFDAT(IGRID)%LCCVS
        ISUMIR=>VSFDAT(IGRID)%ISUMIR
        SLNUM=>VSFDAT(IGRID)%SLNUM
        NTAB=>VSFDAT(IGRID)%NTAB
        IREFOC=>VSFDAT(IGRID)%IREFOC
        IREFCB=>VSFDAT(IGRID)%IREFCB
        LCSTAB=>VSFDAT(IGRID)%LCSTAB
        LCPTAB=>VSFDAT(IGRID)%LCPTAB
        LCKTAB=>VSFDAT(IGRID)%LCKTAB
        LCCTAB=>VSFDAT(IGRID)%LCCTAB
        LCVGN=>VSFDAT(IGRID)%LCVGN
        LCRSAT=>VSFDAT(IGRID)%LCRSAT
        LCALPHA=>VSFDAT(IGRID)%LCALPHA
        ICSTYPE=>VSFDAT(IGRID)%ICSTYPE
        LCEFFP=>VSFDAT(IGRID)%LCEFFP
        ISATOC=>VSFDAT(IGRID)%ISATOC
        ICISC=>VSFDAT(IGRID)%ICISC  
        IAVG=>VSFDAT(IGRID)%IAVG
        ISATFL=>VSFDAT(IGRID)%ISATFL
        IHYDST=>VSFDAT(IGRID)%IHYDST
        STYPE=>VSFDAT(IGRID)%STYPE
        CVS=>VSFDAT(IGRID)%CVS
        KREL=>VSFDAT(IGRID)%KREL
        SAT=>VSFDAT(IGRID)%SAT
        REFOC=>VSFDAT(IGRID)%REFOC
        ALPHA=>VSFDAT(IGRID)%ALPHA
        VGN=>VSFDAT(IGRID)%VGN
        KTAB=>VSFDAT(IGRID)%KTAB
        STAB=>VSFDAT(IGRID)%STAB
        CTAB=>VSFDAT(IGRID)%CTAB
        PTAB=>VSFDAT(IGRID)%PTAB
        RSAT=>VSFDAT(IGRID)%RSAT
        EFFP=>VSFDAT(IGRID)%EFFP
        ISC=>VSFDAT(IGRID)%ISC   
      return
      end
C================================
      Subroutine SVSF2VSF1DA(IGRID)
C  Deallocate VSF data
        use VSFMODULE
        deallocate(VSFDAT(IGRID)%ISUM)
        deallocate(VSFDAT(IGRID)%LCREFOC)
        deallocate(VSFDAT(IGRID)%LCCVS)
        deallocate(VSFDAT(IGRID)%ISUMIR)
        deallocate(VSFDAT(IGRID)%SLNUM)
        deallocate(VSFDAT(IGRID)%NTAB)
        deallocate(VSFDAT(IGRID)%IREFOC)
        deallocate(VSFDAT(IGRID)%IREFCB)
        deallocate(VSFDAT(IGRID)%LCSTAB)
        deallocate(VSFDAT(IGRID)%LCPTAB)
        deallocate(VSFDAT(IGRID)%LCKTAB)
        deallocate(VSFDAT(IGRID)%LCCTAB)
        deallocate(VSFDAT(IGRID)%LCVGN)
        deallocate(VSFDAT(IGRID)%LCRSAT)
        deallocate(VSFDAT(IGRID)%LCALPHA)
        deallocate(VSFDAT(IGRID)%ICSTYPE)
        deallocate(VSFDAT(IGRID)%LCEFFP)
        deallocate(VSFDAT(IGRID)%ISATOC)
        deallocate(VSFDAT(IGRID)%ICISC)
        deallocate(VSFDAT(IGRID)%IAVG)
        deallocate(VSFDAT(IGRID)%ISATFL)
        deallocate(VSFDAT(IGRID)%IHYDST)
        deallocate(VSFDAT(IGRID)%STYPE)
        deallocate(VSFDAT(IGRID)%CVS)
        deallocate(VSFDAT(IGRID)%KREL)
        deallocate(VSFDAT(IGRID)%SAT)
        deallocate(VSFDAT(IGRID)%REFOC)
        deallocate(VSFDAT(IGRID)%ALPHA)
        deallocate(VSFDAT(IGRID)%VGN)
        deallocate(VSFDAT(IGRID)%KTAB)
        deallocate(VSFDAT(IGRID)%STAB)
        deallocate(VSFDAT(IGRID)%CTAB)
        deallocate(VSFDAT(IGRID)%PTAB)
        deallocate(VSFDAT(IGRID)%RSAT)
        deallocate(VSFDAT(IGRID)%EFFP)
        deallocate(VSFDAT(IGRID)%ISC)
      return
      end
C ===============================
      Subroutine SVSF2VSF1PSV(IGRID)
C  Save global data for a grid.
        use VSFMODULE
        
        VSFDAT(IGRID)%ISUM=>ISUM
        VSFDAT(IGRID)%LCREFOC=>LCREFOC
        VSFDAT(IGRID)%LCCVS=>LCCVS
        VSFDAT(IGRID)%ISUMIR=>ISUMIR
        VSFDAT(IGRID)%SLNUM=>SLNUM
        VSFDAT(IGRID)%NTAB=>NTAB
        VSFDAT(IGRID)%IREFOC=>IREFOC
        VSFDAT(IGRID)%IREFCB=>IREFCB
        VSFDAT(IGRID)%LCSTAB=>LCSTAB
        VSFDAT(IGRID)%LCPTAB=>LCPTAB
        VSFDAT(IGRID)%LCKTAB=>LCKTAB
        VSFDAT(IGRID)%LCCTAB=>LCCTAB
        VSFDAT(IGRID)%LCVGN=>LCVGN
        VSFDAT(IGRID)%LCRSAT=>LCRSAT
        VSFDAT(IGRID)%LCALPHA=>LCALPHA
        VSFDAT(IGRID)%ICSTYPE=>ICSTYPE
        VSFDAT(IGRID)%LCEFFP=>LCEFFP
        VSFDAT(IGRID)%ISATOC=>ISATOC
        VSFDAT(IGRID)%ICISC=>ICISC
        VSFDAT(IGRID)%IAVG=>IAVG
        VSFDAT(IGRID)%ISATFL=>ISATFL
        VSFDAT(IGRID)%IHYDST=>IHYDST
        VSFDAT(IGRID)%STYPE=>STYPE
        VSFDAT(IGRID)%CVS=>CVS
        VSFDAT(IGRID)%KREL=>KREL
        VSFDAT(IGRID)%SAT=>SAT
        VSFDAT(IGRID)%REFOC=>REFOC
        VSFDAT(IGRID)%ALPHA=>ALPHA
        VSFDAT(IGRID)%VGN=>VGN
        VSFDAT(IGRID)%KTAB=>KTAB
        VSFDAT(IGRID)%STAB=>STAB
        VSFDAT(IGRID)%CTAB=>CTAB
        VSFDAT(IGRID)%PTAB=>PTAB
        VSFDAT(IGRID)%RSAT=>RSAT
        VSFDAT(IGRID)%EFFP=>EFFP
        VSFDAT(IGRID)%ISC=>ISC
     
        return
      end

C=======================================================================

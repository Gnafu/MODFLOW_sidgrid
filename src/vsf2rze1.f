C  Last change 2013 Iacopo
C    LAST CHANGE 07 MARCH 2006 RBT
C
C ==========================
C  A new module for RZE package:
      Module  RZEMODULE
        INTEGER, SAVE, POINTER :: IRZECB,IRZEOC,IRZECL,ICRZECL
        INTEGER, SAVE, POINTER :: LCRZEOC,LCPET,LCHROOT,LCRTDPTH
        INTEGER, SAVE, POINTER :: LCRTBOT,LCRTTOP,LCRZECL,ICRZL
        REAL,SAVE,DIMENSION(:,:),POINTER :: RZEOC
        INTEGER,SAVE,DIMENSION(:,:),POINTER :: RZECL
        REAL,SAVE,DIMENSION(:,:),POINTER :: PET,RTBOT,RTTOP,HROOT
        REAL,SAVE,DIMENSION(:,:),POINTER :: RTDPTH
        INTEGER, SAVE, DIMENSION(:,:), POINTER :: RZL
       
        
        Type RZETYPE
            INTEGER, POINTER :: IRZECB,IRZEOC,IRZECL,ICRZECL
            INTEGER, POINTER :: LCRZEOC,LCPET,LCHROOT,LCRTDPTH
            INTEGER, POINTER :: LCRTBOT,LCRTTOP,LCRZECL,ICRZL
            REAL,    DIMENSION(:,:), POINTER :: RZEOC
            INTEGER, DIMENSION(:,:), POINTER :: RZECL
            REAL,    DIMENSION(:,:),POINTER ::  PET,RTBOT,RTTOP,HROOT
            REAL,    DIMENSION(:,:), POINTER :: RTDPTH
            INTEGER, DIMENSION(:,:), POINTER :: RZL
        End type RZETYPE
        TYPE(RZETYPE),SAVE :: RZEDAT(10)
      End module RZEMODULE
C================================      
      Subroutine SVSF2RZE1PSV(IGRID)
C Save global RZE data for a grid     
        use RZEMODULE
        RZEDAT(IGRID)%IRZECB=>IRZECB
        RZEDAT(IGRID)%IRZEOC=>IRZEOC
        RZEDAT(IGRID)%IRZECL=>IRZECL
        RZEDAT(IGRID)%ICRZECL=>ICRZECL
        RZEDAT(IGRID)%LCRZEOC=>LCRZEOC
        RZEDAT(IGRID)%LCPET=>LCPET
        RZEDAT(IGRID)%LCHROOT=>LCHROOT
        RZEDAT(IGRID)%LCRTDPTH=>LCRTDPTH
        RZEDAT(IGRID)%LCRTBOT=>LCRTBOT
        RZEDAT(IGRID)%LCRTTOP=>LCRTTOP
        RZEDAT(IGRID)%LCRZECL=>LCRZECL
        RZEDAT(IGRID)%ICRZL=>ICRZL
        RZEDAT(IGRID)%RZEOC=>RZEOC        
        RZEDAT(IGRID)%RZECL=>RZECL
        RZEDAT(IGRID)%PET=>PET
        RZEDAT(IGRID)%RTBOT=>RTBOT
        RZEDAT(IGRID)%RTTOP=>RTTOP
        RZEDAT(IGRID)%HROOT=>HROOT
        RZEDAT(IGRID)%RTDPTH=>RTDPTH
        RZEDAT(IGRID)%RZL=>RZL 
        return
      end      
C================================
      Subroutine SVSF2RZE1DA(IGRID)
C  Deallocate RZE data
        use RZEMODULE
        deallocate(RZEDAT(IGRID)%IRZECB)
        deallocate(RZEDAT(IGRID)%IRZEOC)
        deallocate(RZEDAT(IGRID)%IRZECL)
        deallocate(RZEDAT(IGRID)%ICRZECL)
        deallocate(RZEDAT(IGRID)%LCRZEOC)
        deallocate(RZEDAT(IGRID)%LCPET)
        deallocate(RZEDAT(IGRID)%LCHROOT)
        deallocate(RZEDAT(IGRID)%LCRTDPTH)
        deallocate(RZEDAT(IGRID)%LCRTBOT)
        deallocate(RZEDAT(IGRID)%LCRTTOP)
        deallocate(RZEDAT(IGRID)%LCRZECL)
        deallocate(RZEDAT(IGRID)%ICRZL)
        deallocate(RZEDAT(IGRID)%RZEOC)        
        deallocate(RZEDAT(IGRID)%RZECL)
        deallocate(RZEDAT(IGRID)%PET)
        deallocate(RZEDAT(IGRID)%RTBOT)
        deallocate(RZEDAT(IGRID)%RTTOP)
        deallocate(RZEDAT(IGRID)%HROOT)
        deallocate(RZEDAT(IGRID)%RTDPTH)
        deallocate(RZEDAT(IGRID)%RZL)
        return
      end
C=======================================================================      
      Subroutine SVSF2RZE1PNT(IGRID)
C  Change VSF data to a different grid.
        use RZEMODULE
        IRZECB=>RZEDAT(IGRID)%IRZECB
        IRZEOC=>RZEDAT(IGRID)%IRZEOC
        IRZECL=>RZEDAT(IGRID)%IRZECL
        ICRZECL=>RZEDAT(IGRID)%ICRZECL
        LCRZEOC=>RZEDAT(IGRID)%LCRZEOC
        LCPET=>RZEDAT(IGRID)%LCPET
        LCHROOT=>RZEDAT(IGRID)%LCHROOT
        LCRTDPTH=>RZEDAT(IGRID)%LCRTDPTH
        LCRTBOT=>RZEDAT(IGRID)%LCRTBOT
        LCRTTOP=>RZEDAT(IGRID)%LCRTTOP
        LCRZECL=>RZEDAT(IGRID)%LCRZECL
        ICRZL=>RZEDAT(IGRID)%ICRZL
        RZEOC=>RZEDAT(IGRID)%RZEOC
        RZECL=>RZEDAT(IGRID)%RZECL
        PET=>RZEDAT(IGRID)%PET
        RTBOT=>RZEDAT(IGRID)%RTBOT
        RTTOP=>RZEDAT(IGRID)%RTTOP
        HROOT=>RZEDAT(IGRID)%HROOT
        RTDPTH=>RZEDAT(IGRID)%RTDPTH
        RZL=>RZEDAT(IGRID)%RZL
        return
      end
C=======================================================================
      SUBROUTINE VSF2RZE1AR(IN,IGRID)
C-----Version 2001
C-----VERSION 07MARCH2006 RBT
C     ******************************************************************
C	ALLOCATE ARRAY SPACE FOR ROOT ZONE EVAPOTRANSPIRATION VARIABLES
C     ******************************************************************
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:NCOL,NROW,NLAY,HNEW,BOTM,NBOTM,CC,CR,CV,
     &                       HOLD,HCOF,RHS,LAYCBD,LBOTM,IBOUND,IOUT,
     &                       DELR,DELC      
      use VSFMODULE
      use RZEMODULE 
C     ------------------------------------------------------------------ 
      CHARACTER*200 LINE
C Iac:
C        
C Allocate RZE scalar variables:
      allocate(IRZECB,IRZEOC,IRZECL,ICRZECL,LCRZEOC,LCPET,LCHROOT)
      allocate(LCRTDPTH,LCRTBOT,LCRTTOP,LCRZECL,ICRZL)
C     ------------------------------------------------------------------
  570 FORMAT(1X,'ROOT ZONE EVAPOTRANSPIRATION FLOW RATES WILL BE SAVED '
     &,'ON UNIT',I4)
  575 FORMAT(1X,'ROOT ZONE EVAPOTRANSPIRATION FLOW RATES WILL BE SAVED '
     &,'FOR ALL TIME STEPS IN EACH STRESS PERIOD')
  576 FORMAT(1X,'NO ROOT ZONE EVAPOTRANSPIRATION OUTPUT REQUESTED')
  577 FORMAT(1X,'RZE FLOW RATES WILL BE SAVED FOR ALL MODEL CELLS')
  578 FORMAT(1X,'RZE FLOW RATES WILL BE SAVED FOR ',1X,I5,1X'
     &USER-DEFINED CELL LOCATIONS')
  580 FORMAT(1X,'ROOT ZONE EVAPOTRANSPIRATION FLOW RATES WILL BE SAVED '
     &,'FOR',1X,I5,1X,'USER-DEFINED TIMES DURING THE SIMULATION')	
  585 FORMAT(1X,I10,' ELEMENTS IN RX ARRAY ARE USED BY RZE') 
  590 FORMAT(1X,I10,' ELEMENTS IN IR ARRAY ARE USED BY RZE')   	
C
C1-----READ IRZECB, IRZEOC, AND IRZECL FROM INPUT FILE
      LLOC=1
      CALL URDCOM(IN,0,LINE)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IRZECB,R,IOUT,IN)
      IF (IRZECB.NE.0) THEN
        LLOC=1
        CALL URDCOM(IN,0,LINE)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IRZEOC,R,IOUT,IN)
        CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,IRZECL,R,IOUT,IN)
      END IF
C		
C2---- IF NO OUTPUT REQUESTED, WRITE NOTICE TO OUTPUT FILE AND SET FLAGS
      IF (IRZECB.EQ.ZERO) THEN
        WRITE(IOUT,576)
        LCRZEOC=1
        IRZEOC=0
      END IF
C
C3---- PRINT UNIT NUMBER.TO MODFLOW OUTPUT FILE
	IF (IRZECB.NE.0) WRITE(IOUT,570) ABS(IRZECB)
C
C4--- PRINT OUTPUT CONTROL SETTING TO MODFLOW OUTPUT FILE
	IF (IRZEOC.LE.ZERO) THEN
	    WRITE(IOUT,575)
		LCRZEOC=1
	ELSE
	    WRITE(IOUT,580)IRZEOC
	ENDIF
	IF (IRZECL.LE.ZERO) THEN
		WRITE (IOUT,577)
	    ICRZECL=1
	ELSE
	   WRITE(IOUT,578)
	ENDIF
C
C Iac:
C Allocate space for RZE arrays
      allocate(RZEOC(IRZEOC,2),RZECL(IRZECL,2))      
      allocate(PET(NCOL,NROW),RTTOP(NCOL,NROW))
      allocate(RTDPTH(NCOL,NROW))
      allocate(RTBOT(NCOL,NROW),HROOT(NCOL,NROW),RZL(NCOL,NROW))
C -----      
C5--- ALLOCATE SPACE IN RX ARRAY FOR EVAPOTRANSPIRATION ARRAYS
      IRK=ISUM
	  IIRK=ISUMIR
C
C5A-- ALLOCATE SPACE FOR OUTPUT TIMES AND CELL LOCATIONS IF REQUESTED
	IF (IRZECB.NE.ZERO.AND.IRZEOC.GT.ZERO) THEN
		LCRZEOC=ISUM
		ISUM=ISUM+IRZEOC*2
	ENDIF
	IF (IRZECB.NE.ZERO.AND.IRZECL.GT.ZERO) THEN
		ICRZECL=ISUMIR
		ISUMIR=ISUMIR+IRZECL*2
	ENDIF
	LCPET=ISUM
	ISUM=ISUM+NROW*NCOL
	LCHROOT=ISUM
	ISUM=ISUM+NROW*NCOL
	LCRTDPTH=ISUM
	ISUM=ISUM+NROW*NCOL
	LCRTBOT=ISUM
	ISUM=ISUM+NROW*NCOL
	LCRTTOP=ISUM
	ISUM=ISUM+NROW*NCOL
	ICRZL =ISUMIR
	ISUMIR=ISUMIR+NROW*NCOL
C 
C6---- CALCULATE & PRINT AMOUNT OF SPACE USED BY RZE PACKAGE.
      IRK=ISUM-IRK
	IIRK=ISUMIR-IIRK
      WRITE(IOUT,585)IRK
	WRITE(IOUT,590)IIRK
C Iac: -----SAVE POINTERS TO DATA AND RETURN.
      CALL SVSF2RZE1PSV(IGRID)
C7---- RETURN.
      RETURN
      END
C
C=======================================================================
      SUBROUTINE VSF2RZE1RP(IN,IGRID)
C-----Version 2011
C     VERSION 07MARCH2006 VSF1RZE1RP
C     ******************************************************************
C     READ EVAPOTRANSPIRATION DATA
C     ******************************************************************
C
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:IOUT,NCOL,NROW,NLAY,IBOUND,DELR,DELC,CV
      use VSFMODULE
      use RZEMODULE 
C     ------------------------------------------------------------------
C
      INTEGER NUM      
      CHARACTER*200 LINE
      CHARACTER*24 ANAME
      dimension ANAME(6)
C
      DATA ANAME(1) /'  POTENTIAL ROOT ZONE ET'/
      DATA ANAME(2) /'              ROOT DEPTH'/
      DATA ANAME(3) /'    ROOT BOTTOM ACTIVITY'/
      DATA ANAME(4) /'       ROOT TOP ACTIVITY'/
      DATA ANAME(5) /'           ROOT PRESSURE'/
      DATA ANAME(6) /'           RZE TOP LAYER'/      
C
C Iac: 
      CALL SVSF2RZE1PNT(IGRID) 
      
C1------READ FLAGS SHOWING WHETHER DATA IS TO BE REUSED
      CALL URDCOM(IN,0,LINE)
	  LLOC=1
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INPET,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INRDPTH,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INRTBOT,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INRTTOP,R,IOUT,IN)
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INHROOT,R,IOUT,IN) 
      CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,INRZL,R,IOUT,IN)
      
C
C2---TEST INPET TO SEE WHERE POTENTIAL EVAPOTRANSPIRATION COMES FROM.
      IF(INPET.GE.0)GO TO 52
C
C2A----IF INPET<0 THEN REUSE POTENTIAL EVAPOTRANSPIRATION ARRAY FROM LAST STRESS PERIOD
      WRITE(IOUT,16)
   16 FORMAT(1X,/1X,'REUSING PET FROM LAST STRESS PERIOD')
      GO TO 17
C
C3----IF INPET=>0 THEN CALL MODULE U2DREL TO READ POTENTIAL EVAPORATION.
   52 CALL U2DREL(PET,ANAME(1),NROW,NCOL,0,IN,IOUT)
C
C3A---MULTIPLY POTENTIAL ET RATE BY CELL AREA TO GET VOLUMETRIC RATE
      DO 41 IR=1,NROW
      DO 41 IC=1,NCOL
      IF (INPET.GT.0) PET(IC,IR)=PET(IC,IR)*DELR(IC)*DELC(IR)
   41 CONTINUE
C
C4----TEST INRDPTH TO SEE WHERE ROOT DEPTH COMES FROM.
   17 IF(INRDPTH.GE.0)GO TO 57
C
C4A-----IF INRDPTH<0 THEN REUSE ROOT DEPTH.
      WRITE(IOUT,14)
   14 FORMAT(1X,/1X,'REUSING RDPTH FROM LAST STRESS PERIOD')
      GO TO 55
C
C5----IF INRDPTH=>0 READ ROOT DEPTH.
   57 CALL U2DREL(RTDPTH,ANAME(2),NROW,NCOL,0,IN,IOUT) 
      
C
C6------TEST INRTBOT TO SEE WHERE ROOT BOTTOM ACTIVITY COMES FROM
   55 IF(INRTBOT.GE.0)GO TO 67
C
C6A------IF INRTBOT<0 REUSE ROOT BOTTOM ACTIVITY FROM LAST STRESS PERIOD
      WRITE(IOUT,15)
   15 FORMAT(1X,/1X,'REUSING RTBOT FROM LAST STRESS PERIOD')
      GO TO 70
C
C7-------IF INRTBOT=>0 CALL MODULE U2DREL TO READ ROOT BOTTOM ACTIVITY
   67 CALL U2DREL(RTBOT,ANAME(3),NROW,NCOL,0,IN,IOUT)
C
C8------TEST INRTTOP TO SEE WHERE ROOT TOP ACTIVITY COMES FROM
   70 IF(INRTTOP.GT.0)GO TO 77
C
C8A------IF INRTTOP<0 REUSE ROOT TOP ACTIVITY FROM LAST STRESS PERIOD
      WRITE(IOUT,25)
   25 FORMAT(1X,/1X,'REUSING RTTOP FROM LAST STRESS PERIOD')
      GO TO 80
C
C8B-------IF INRTTOP=>0 CALL MODULE U2DREL TO READ ROOT TOP ACTIVITY
   77 CALL U2DREL(RTTOP,ANAME(4),NROW,NCOL,0,IN,IOUT)
C
C9------TEST INHROOT TO SEE WHERE ROOT PRESSURE COMES FROM
   80 IF(INHROOT.GE.0)GO TO 87
C
C9A------IF INHROOT<0 REUSE ROOT PRESSURE FROM LAST STRESS PERIOD
      WRITE(IOUT,95)
   95 FORMAT(1X,/1X,'REUSING HROOT FROM LAST STRESS PERIOD')
      GO TO 100
C
C9B-------IF INHROOT=>0 CALL MODULE U2DREL TO READ ROOT PRESSURE
   87 CALL U2DREL(HROOT,ANAME(5),NROW,NCOL,0,IN,IOUT) 
C
C10------TEST INRZL TO SEE WHERE TOP LAYER LOCATION COMES FROM
  100 IF(INRZL.GE.0)GO TO 97
C
C10A------IF INRZL<0 REUSE LAYER LOCATION FROM LAST STRESS PERIOD
      WRITE(IOUT,99)
   99 FORMAT(1X,/1X,'REUSING RZL FROM LAST STRESS PERIOD')
      GO TO 110
C
C10B-------IF INRZL=>0 CALL MODULE U2DINT TO READ LOCATION
   97 CALL U2DINT(RZL,ANAME(6),NROW,NCOL,0,IN,IOUT)

C11-----RETURN
  110 RETURN
      END
C
C
C=======================================================================
      SUBROUTINE VSF2RZE1RPP(IN,FNAME,IGRID)
C-----Version 2011
C
C     VERSION 07MARCH2006 VSF1RZE1RPP
C     ******************************************************************
C     READ EVAPOTRANSPIRATION OUTPUT CONTROL AND OPEN OUTPUT FILE
C     ******************************************************************
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:IOUT,NCOL,NROW,NLAY,IBOUND,DELR,DELC,CV
      use VSFMODULE
      use RZEMODULE 
C     ------------------------------------------------------------------
C
      INTEGER NUM
      CHARACTER*4 EXT
      CHARACTER*200 FNAME,OFILE,LINE
      DATA EXT /'.RZO'/
C
C Iac: 
      CALL SVSF2RZE1PNT(IGRID) 

C     ------------------------------------------------------------------
C1---- READ RZEOC ARRAY IF REQUESTED (IF IRZEOC IS POSITIVE)
      IF (IRZEOC.GT.ZERO) THEN
        DO 1 K=1,IRZEOC
            LLOC=1
            CALL URDCOM(IN,0,LINE)
            CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,RZEOC(K,1),IOUT,IN)
	        CALL URWORD(LINE,LLOC,ISTART,ISTOP,3,I,RZEOC(K,2),IOUT,IN)		  
    1     CONTINUE
      ENDIF
C
C2---- READ RZECL ARRAY IF REQUESTED (IF IRZECL IS POSITIVE)
      IF (IRZECL.GT.ZERO) THEN
        DO 2 K=1,IRZECL
		   LLOC=1
           CALL URDCOM(IN,0,LINE)
           CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,RZECL(K,1),R,IOUT,IN)
	       CALL URWORD(LINE,LLOC,ISTART,ISTOP,2,RZECL(K,2),R,IOUT,IN)
    2	CONTINUE
      ENDIF
C
C3---- OPEN OUTPUT FILE
      IF (IRZECB.NE.0) THEN
        OFILE=FNAME
	    NUM=INDEX(OFILE,' ')
        WRITE(OFILE(NUM-4:NUM),'(A4)')EXT
        IF(IRZECB.LT.0)THEN
          OPEN (UNIT=ABS(IRZECB),FILE=OFILE,FORM='UNFORMATTED',
     &	         STATUS='UNKNOWN')
        ELSE
	      OPEN (UNIT=IRZECB,FILE=OFILE,FORM='FORMATTED',
     &	         STATUS='UNKNOWN')
        ENDIF
      ENDIF
C
C
C4--- RETURN
      RETURN
      END
C
C=======================================================================
      SUBROUTINE VSF2RZE1FM(IGRID)
C-----Version 2011     
C     VERSION 07MARCH2006 VSF1RZE1FM
C     ******************************************************************
C     COMPUTE SOIL EVAPOTRANSPIRATION
C     ******************************************************************
C
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:IOUT,NCOL,NROW,NLAY,HNEW,BOTM,NBOTM,BUFF,
     &                       IBOUND,DELR,DELC,CV,LBOTM,LAYCBD,RHS,HCOF
      use GWFBASMODULE, ONLY:DELT,PERTIM,TOTIM,ICHFLG,HDRY
      use GWFLPFMODULE, ONLY:HK 
      use VSFMODULE,    ONLY:SLNUM,NTAB,PTAB,KTAB,STYPE,ISC,ALPHA,VGN
      use RZEMODULE 
C     ------------------------------------------------------------------
C	
C
      REAL NODE,PRESS,DPTH,ETR,KKREL
      DOUBLE PRECISION RTACT
C
C Iac
      REAL*8      VSRDF
C --

      INTEGER KK,IT,M 
C
      DIMENSION ETR(NCOL,NROW) 
C
      PARAMETER (ONE=1.0)
C Iac: 
      CALL SVSF2RZE1PNT(IGRID)      
C     ------------------------------------------------------------------
      ETR=0.0	
      BUFF=0.0
      
C1---- ESTABLISH BOUNDARY VALUES FOR INTERNAL SOIL CHARACTERISTICS TABLE
        
        ALP1=ALOG10(-PTAB(1))
	    DLP=(ALOG10(-PTAB(NTAB))-ALP1)/(NTAB-1) 
	    PTAB1=PTAB(1)
	    PTABN=PTAB(NTAB)
        
C      
C2------PROCESS EACH CELL LOCATION    
      DO 50 IR=1,NROW
      DO 50 IC=1,NCOL           
        PETT=PET(IC,IR)
C3----- ASSIGN TOP LAYER FROM RZL ARRAY
	    KK=RZL(IC,IR)
      DO 10 IL=KK,NLAY           
        IF(PETT.LE. 0.0D0)CYCLE
C
C   COMPUTE TRANSPIRATION FOR EACH NODE IN COLUMN
        IF(IBOUND(IC,IR,IL).GT.0.AND.HK(IC,IR,IL).GT.0) THEN
          BBOT=BOTM(IC,IR,LBOTM(IL))
		  TTOP=BOTM(IC,IR,LBOTM(IL)-1)
		  NODE=(TTOP+BBOT)/2
		  DPTH=BOTM(IC,IR,LBOTM(1)-1)-NODE
		  HD=HNEW(IC,IR,IL)
		  PRESS=HD-NODE   
          IF (DPTH.GT.RTDPTH(IC,IR)) GO TO 20
		  DELZ=BOTM(IC,IR,LBOTM(IL)-1)-BOTM(IC,IR,LBOTM(IL))
 		  VCOND=HK(IC,IR,IL)
C4--- IF CELL NOT VSF, CYCLE
		  M=STYPE(IC,IR,IL)
          IF (M.LE.0) CYCLE
C5---- CALCULATE RELATIVE PERMEABILITIES 
C
C5A--- IF CELL IS SATURATED, SET KKREL = 1.0
	      IF (HD.GE.NODE) THEN
		    KKREL=1.0
C
C5B--- OTHERWISE, LOOK UP K IN TABLE IF PRESSURE IS WITHIN SPECIFIED INTERVAL
 	      ELSEIF (PRESS.GE.PTABN.AND.PRESS.LE.PTAB1)THEN
	        IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		    S1=(KTAB(IT+1,M)-KTAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		    CI=KTAB(IT,M)+S1*(PRESS-PTAB(IT))
		    KKREL=CI
C
C5C--- IF PRESSURE IS NOT WITHIN INTERVAL, COMPUTE DIRECTLY
	      ELSE
	        KKREL=SVSF1REF1KP(PRESS,ALPHA(M,1),VGN(M,1),ISC(M))	
	      ENDIF
C
C6---- EVAPOTRANSPIRATION IS ZERO IF NTYP IS NOT 0, NODE IS DEEPER
C6----  THAN RTDPTH, OR PRESSURE IS LESS THAN HROOT
 	      IF(PRESS.LE.HROOT(IC,IR)) THEN
		  	BUFF(IC,IR,IL)=0.0D0
          ELSE
			RTACT=VSRDF(DPTH,DELZ,RTDPTH(IC,IR),
     &				    RTTOP(IC,IR),RTBOT(IC,IR))
C
C6A--- NOTE SIGN CONVENTION (NEGATIVE ROOT ACTIVITY):  MAKES ET POSITIVE
		    HXX=-VCOND*KKREL*DELC(IR)*DELR(IC)*RTACT*DELZ

			BUFF(IC,IR,IL)=(HROOT(IC,IR)-PRESS)*HXX
			ETR (IC,IR)=ETR(IC,IR)+(HROOT(IC,IR)-PRESS)*HXX
          ENDIF
          
        ENDIF
   10 CONTINUE
            
      IF (IL.GT.NLAY)IL=NLAY
C
C7---- IF TOTAL TRANSPIRATION FOR COLUMN IS GREATER
C7----  THAN POTENTIAL THEN ADJUST TRANSPIRATION VALUES
   20 R1=PET(IC,IR)/ETR(IC,IR)
      DO 30 K=KK,IL
		IF(IBOUND(IC,IR,K).GT.0.AND.HK(IC,IR,K).GT.0.0D0) THEN
	      BBOT=BOTM(IC,IR,LBOTM(K))
		  TTOP=BOTM(IC,IR,LBOTM(K)-1)
	      NODE=(TTOP+BBOT)/2 		  
		  DPTH=BOTM(IC,IR,LBOTM(1)-1)-NODE
		  IF(DPTH.GT.RTDPTH(IC,IR)) GO TO 40
C
C8---- SUBTRACT FROM RHS
		  IF(ETR(IC,IR).GT.PETT) THEN
		    BUFF(IC,IR,K)=BUFF(IC,IR,K)*R1
			RHS(IC,IR,K)=RHS(IC,IR,K)+BUFF(IC,IR,K)
		  ELSE
			RHS(IC,IR,K)=RHS(IC,IR,K)+BUFF(IC,IR,K)		
		  ENDIF
		END IF
   30 CONTINUE
   40 CONTINUE
C
   50 CONTINUE
C
C9------RETURN
      RETURN
      END
C
C     ------------------------------------------------------------------
     	SUBROUTINE VSF2RZE1BD(KSTP,KPER,IGRID)
C-----Version 2011
C-----VERSION 07MARCH2006 VSF1RZE1BD
C     ******************************************************************
C     CALCULATE VOLUMETRIC BUDGET FOR EVAPOTRANSPIRATION
C     ******************************************************************
C
C     SPECIFICATIONS:
!! IAC
      use GLOBAL,       ONLY:IOUT,NCOL,NROW,NLAY,HNEW,BOTM,NBOTM,BUFF,
     &                       IBOUND,DELR,DELC,CV,LBOTM,LAYCBD
      use GWFBASMODULE, ONLY:DELT,PERTIM,TOTIM,ICBCFL,MSUM,VBVL,VBNM
      use GWFLPFMODULE, ONLY:HK,VKA,VKCB,LAYFLG,IWETIT,IHDWET,ILPFCB, 
     &                       LAYWET,LAYVKA,LAYAVG,LAYTYP,WETFCT
      use GWFBCFMODULE, ONLY:IBCFCB
      use VSFMODULE 
      use RZEMODULE
C     ------------------------------------------------------------------
      CHARACTER*16 TEXT
      REAL	           NODE,PRESS,DPTH, KKREL
      DOUBLE PRECISION      RTACT
C Iac
      REAL*8      VSRDF
C --

C
      INTEGER  IT,KSTP,KPER,KITER,KK
C
      DOUBLE PRECISION RATOUT,QQ,HH,SS,DD,XX,HHCOF,RRHS
      DIMENSION ETR(NCOL,NROW),USTP(IRZEOC),UPER(IRZEOC)
C
      DATA TEXT /'    ROOT ZONE ET'/
C Iac: 
      CALL SVSF2RZE1PNT(IGRID)       
C     ------------------------------------------------------------------
C
C1---- CLEAR COUNTERS
	ONE=1.0
	ETR=0.0	
	BUFF=0.0
	RATOUT=0.0
	N=0
	LIM=0.0005
C
C2---- CLEAR THE BUFFER.
      DO 2 IL=1,NLAY
      DO 2 IR=1,NROW
      DO 2 IC=1,NCOL
      BUFF(IC,IR,IL)=ZERO
    2 CONTINUE
C
C3---- ESTABLISH BOUNDARY VALUES FOR INTERNAL SOIL CHARACTERISTICS TABLE
	ALP1=ALOG10(-PTAB(1))
	DLP=(ALOG10(-PTAB(NTAB))-ALP1)/(NTAB-1) 
	PTAB1=PTAB(1)
	PTABN=PTAB(NTAB)
C
C4------PROCESS EACH CELL LOCATION
      DO 50 IR=1,NROW
      DO 50 IC=1,NCOL
	    PETT=PET(IC,IR)
C4A--- ASSIGN TOP LAYER FROM RZL ARRAY
	    KK=RZL(IC,IR)
        DO 10 IL=KK,NLAY
        IF(PETT.LE. 0.0D0)CYCLE
C
C5-------COMPUTE TRANSPIRATION FOR EACH NODE IN COLUMN
        IF(IBOUND(IC,IR,IL).GT.0.AND.HK(IC,IR,IL).GT.0.0D0) THEN
C
     		BBOT=BOTM(IC,IR,LBOTM(IL))
		TTOP=BOTM(IC,IR,LBOTM(IL)-1)
	    NODE=(TTOP+BBOT)/2
		DPTH=BOTM(IC,IR,LBOTM(1)-1)-NODE
		HD=HNEW(IC,IR,IL)
		PRESS=HD-NODE
		IF(DPTH.GT.RTDPTH(IC,IR)) GO TO 20
		DELZ=BOTM(IC,IR,LBOTM(IL)-1)-BOTM(IC,IR,LBOTM(IL))
		VCOND=HK(IC,IR,IL)
C6--- IF CELL NOT VSF, CYCLE
		M=STYPE(IC,IR,IL)
		IF (M.LE.0) CYCLE
C
C7--- CALCULATE RELATIVE PERMEABILITIES 
C
C7A--- IF CELL IS SATURATED, SET KKREL = 1.0
	    IF (HD.GE.NODE) THEN
		  KKREL=ONE
C
C7B--- OTHERWISE, LOOK UP K IN TABLE IF PRESSURE IS WITHIN SPECIFIED INTERVAL
	    ELSEIF (PRESS.GE.PTABN.AND.PRESS.LE.PTAB1)THEN
	      IT=INT((ALOG10(-PRESS)-ALP1)/DLP)+1
		  S1=(KTAB(IT+1,M)-KTAB(IT,M))/(PTAB(IT+1)-PTAB(IT))
		  CI=KTAB(IT,M)+S1*(PRESS-PTAB(IT))
		  KKREL=CI
C
C7C--- IF PRESSURE IS NOT WITHIN INTERVAL, COMPUTE DIRECTLY
	    ELSE
	      KKREL=SVSF1REF1KP(PRESS,ALPHA(M,1),VGN(M,1),ISC(M))	
	    ENDIF
C
C8---- TRANSPIRATION IS ZERO IF NTYP IS NOT 0, NODE IS DEEPER
C8---- THAN RTDPTH, OR PRESSURE IS LESS THAN HROOT
        IF(PRESS.LE.HROOT(IC,IR)) THEN
			BUFF(IC,IR,IL)=0.0D0
        ELSE
			
            RTACT= VSRDF(DPTH,DELZ,RTDPTH(IC,IR),
     &				    RTTOP(IC,IR),RTBOT(IC,IR))
C
C8A--- NOTE SIGN CONVENTION (NEGATIVE ROOT ACTIVITY):  MAKES ET POSITIVE
		    HXX=-VCOND*KKREL*DELC(IR)*DELR(IC)*RTACT*DELZ
			BUFF(IC,IR,IL)=(HROOT(IC,IR)-PRESS)*HXX
			ETR (IC,IR)=ETR(IC,IR)+BUFF(IC,IR,IL)
        END IF
        END IF
   10 CONTINUE
	IF (IL.GT.NLAY) IL=NLAY
C
C9---- IF TOTAL TRANSPIRATION FOR COLUMN IS GREATER
C9---- THAN POTENTIAL THEN ADJUST TRANSPIRATION VALUES
   20 R1=PET(IC,IR)/ETR(IC,IR)
      DO 30 K=KK,IL
        IF(IBOUND(IC,IR,K).GT.0.AND.HK(IC,IR,K).GT.0.0D0) THEN
	      BBOT=BOTM(IC,IR,LBOTM(K))
		  TTOP=BOTM(IC,IR,LBOTM(K)-1)
	      NODE=(TTOP+BBOT)/2
		  DPTH=BOTM(IC,IR,LBOTM(1)-1)-NODE
          IF(DPTH.GT.RTDPTH(IC,IR)) GO TO 40
          IF(ETR(IC,IR).GT.PETT) THEN
		    BUFF(IC,IR,K)=BUFF(IC,IR,K)*R1
			ETR(IC,IR)=PETT
          ENDIF
        END IF
   30 CONTINUE
   40 CONTINUE
C
C10-----ACCUMULATE TOTAL FLOW RATE.
	Q=-ETR(IC,IR)
    	QQ=Q
	RATOUT=RATOUT-QQ
C
   50 CONTINUE
C
C11------SET IBD TO INDICATE IF CELL-BY-CELL BUDGET VALUES WILL BE SAVED.
	  IBD=0
      !IF(IBCFCB.LT.0 .AND. ICBCFL.NE.0) IBD=-1
      !IF(ILPFCB.LT.0 .AND. ICBCFL.NE.0) IBD=-1
      !IF(IBCFCB.GT.0) IBD=ICBCFL
      !IF(ILPFCB.GT.0) THEN
		!IBD=ICBCFL
		!IBCFCB=ILPFCB
      !ENDIF
C
C12--- RECORD FLUXES IN CELL-BY-CELL FLOW FILE
      IF(IBD.EQ.1) CALL UBUDSV(KKSTP,KPER,TEXT,
     1                       IBCFCB,SLM,NCOL,NROW,NLAY,IOUT)
      IF(IBD.EQ.2) CALL UBDSV1(KKSTP,KPER,TEXT,IBCFCB,
     1            SLM,NCOL,NROW,NLAY,IOUT,DELT,PERTIM,TOTIM,IBOUND) 
C
C13-----MOVE TOTAL ET RATE INTO VBVL FOR PRINTING BY BAS1OT.
      ROUT=RATOUT
      VBVL(3,MSUM)=ZERO
      VBVL(4,MSUM)=ROUT
C
C14-----ADD ET(ET_RATE TIMES STEP LENGTH) TO VBVL.
      VBVL(2,MSUM)=VBVL(2,MSUM)+ROUT*DELT
C
C15-----MOVE BUDGET TERM LABELS TO VBNM FOR PRINT BY MODULE BAS1OT.
      VBNM(MSUM)=TEXT
C
C16-----INCREMENT BUDGET TERM COUNTER.
      MSUM=MSUM+1
C		
C Iac :
C The part concerning the output peinting is changed...something
C                     was incompatible (?)
C17--- DETERMINE REQUESTED STRESS PERIOD AND ELAPSED TIME 
C      and write the corresponding output in ASCII file
C18---
      if (IRZECB>0) then
C18A--- ASCII FILE      
      IF (IRZEOC.GT.ZERO) THEN
         do  L=1,IRZEOC
             if (KPER==abs(RZEOC(L,1)).AND.KSTP==abs(RZEOC(L,2))) then
                 if (IRZECL>0) then
                 WRITE(IRZECB,899) KPER,KSTP,TOTIM,ROUT 
                 DO I=1,NROW
	               DO J=1,NCOL
                       ICL=0
			           do LL=1,IRZECL
                 IF (J==abs(RZECL(LL,1)).AND.I==abs(RZECL(LL,2))) ICL=1
                       end do 
			           IF (ICL.EQ.0) CYCLE
                       KK=RZL(J,I)
	                   DO K=KK,NLAY
                          IF (BUFF(J,I,K).EQ.0) CYCLE
C18D--- WRITE FLOW RATE FOR CELL
                       WRITE(IRZECB,900) K,I,J,BUFF(J,I,K)
      !WRITE(IRZECB,*)'LAYER ',K,',ROW ',I,',COL ',J,',FLOW ',BUFF(J,I,K) 
                       end do 
                   end do
                 end do
                 end if
             end if
         end do 
      END IF
 899     FORMAT('STRESS PERIOD ',I4,'   STEP',I4,' ELAPSED TIME  ',
     &          F5.3,' TOTAL RZE FLOW FOR THIS TIME STEP =  ',F5.3,/) 
 900     FORMAT(1X,'LAYER ',I4,'   ROW ',I4,'   COL ',I4,
     1       '   FLOW ',E15.5,/) 
C
C      
      ELSEIF (IRZECB.LT.0) THEN
C18B--- BINARY FILE
             CALL UBUDSV(KSTP,KPER,TEXT,
     1              IRZECB,BUFF,NCOL,NROW,NLAY,IOUT)      
C       
      end if   
C ----end Iac      
C19-----RETURN.
  901 RETURN
      END
C
C--------------------------------------------------------------------
      DOUBLE PRECISION FUNCTION VSRDF(Z1,Z2,RTDPTH,RTTOP,RTBOT)
C*****
CVSRDF
C*****
C     PURPOSE: TO DETERMINE THE ROOT ACTIVITY AT EACH NODE WITHIN
C              THE ROOT ZONE FOR EACH TIME STEP
C
C	ADAPTED FROM VS2DT CODE (HEALY, 1996)
C--------------------------------------------------------------------
      REAL ZI,Z2,RTDPTH,RTTOP,RTBOT
C--------------------------------------------------------------------
C
C
C   LINEARLY INTERPOLATE USING DEPTH OF NODE AND MAXIMUM ROOT DEPTH
C
      IF(RTDPTH.GT.Z1.AND.RTDPTH.GT.0.0D0)THEN
      IF(RTDPTH.GE.Z1+Z2)THEN
      ZZ=Z1+0.5D0*Z2
      ZZ1=1.0D0
      ELSE
      ZZ=(Z1+RTDPTH)*0.5D0
      ZZ1=(RTDPTH-Z1)/Z2
      END IF
      VSRDF=ZZ1*(ZZ*RTBOT+(RTDPTH-ZZ)*RTTOP)/RTDPTH
      ELSE
      VSRDF=0.0D0
      END IF
      RETURN 
      END
